Typeof / tipo de, verificando o tipo da variavel em Js {
    exemplo:
    Typeof 'google' = Str "String"
    Typeof 6 = Inteiro // number
    Typeof null = objeto // para o Js null e um objeto
 
 // Number.parseInt convertando para int, Number.pasertFloat para números real
 // Number. para proprio Js decidir entre inteiro e real, para transforma. 
 // Número para string, String(valor) ou n.ToString()
}

Formatação em texto: exemplo{
 var nome = 'quaklquer'
 var idade = 15
 var nota = 5.5
 print('o Aluno ${nome} de ${idade} tirou a nota ${nota}')

 .length // para verifica o tamanho de uma string
 .toUpperCase() // deixa tudo para maiúsculo
 .toLowCase() // deixa tudo minúsculas
}


document{
    write // escreve 

formatçaõ em number
  .toFixed() para todos os numbers 
  exemplo{
    n1 = 15.2
    n1.toFixed(2)
    n1 fica = 15.20
   }
  .toFixed().replace // trocando ' . ' por ' , '
  exemplo {
    n1 = 15.5
    n1.toFixed(2).replace(' . ' , ' , ')
    n1  agora ficou = 15,50
   }
 // um pouco avançado

 .toLocalString('pt-BR', {style: 'currency', currency: 'BRL'}) // localização de estilos monétarios

}

Operadores{
  +   // soma
  -   // subtração
  *   // multiplicação
  /   //  divisão
  %   // resto da divisão
  **  //  potenciação (raiz quadrada)
  Precedência{
    () // 1
    ** // 2
    */%  // 3
    +-  // 4
  }
  A atribuição Simples{
    var a = 5 + 3 = 8
    var b = a % 5 = 3
    var c = 5 *b ** 2 = 45
    var d = 10 - a / 2 = 6
    var e = 6 * 2 / d = 2
    var f = b % e + 4 / e = 3

    Macetes
    var n = 4
    var n = n + 4 // pode ser resumido em 'n += 4'
  }

  Incremento {
    var x = 5
    x = x + 1 ou x =+1
    Pode ser escrita como
    x ++x
    ou 
    x --x
  }

}

Conjunção e disjunção{

   Disjunção precisa de apenas um argumento como verdadeiro
    Simbolgia ' || '

   Conjunção precisa que os dois elementos sejam verdadeiros
    Simbologia ' && '

   Ordem
   a > b && a % 2 == 0  // Primeiros os operadores aritimetico depois os operacionais e por ultimo o operador lógico
   
   Sena mesma impresão tiver um 'e' ou um 'ou' e um 'não'
   ordem de execução é {

     1 - não: !
     2 - e: &&
     3 - ou: || 
   }
    Pratica de Leitura{
      idade <= 15 && idade >= 17  // idade esta entre 15 e 17
      salario == 1500 && != 'm'   // salario e igual a 1500 e o sexo e diferente de homem ?
    }
    Operador ternario{
      Simbologia: teste ' True ? False : '
      exemplo:{
        var media = 6

        Pergunta      True       False
        media > 7 ? 'aprovado' : 'reprovado'
        resultado séra 'reprovado'

        media += 3
        media = 9

        Pergunta      True       False
        media > 7 ? 'aprovado':'reprovado'
        resultado agora: 'aprovado'
      }
    }

}

dom{
  O que é DOM ?
  R: DOM ('D'ocumento 'O'bject 'M'odel)  tradução = Modelo de Objetos para documentos
  é um conjunto de objetos dentro do navegador que vai da caesso
  aos documentos internos do seu website

  Árvore dom{

                   windpw
                     *
           ***********************       
           *         *           *
        location   document    history  
                     *
                    html
                     *
             *****************
             *               *
            head            body
             *               *
          ********       ************
          *      *       *   *  *   *
         meta  title     h1  p  p  div
  
  }
  
}




